<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map
    PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN"
    "http://www.ibatis.com/dtd/sql-map.dtd">


<sql-map name="Order">

  <result-map name="result" class="org.springframework.samples.jpetstore.domain.Order">
    <property name="billAddress1" column="BILLADDR1" columnIndex="1"/>
    <property name="billAddress2" column="BILLADDR2" columnIndex="2"/>
    <property name="billCity" column="BILLCITY" columnIndex="3"/>
    <property name="billCountry" column="BILLCOUNTRY" columnIndex="4"/>
    <property name="billState" column="BILLSTATE" columnIndex="5"/>
    <property name="billToFirstName" column="BILLTOFIRSTNAME" columnIndex="6"/>
    <property name="billToLastName" column="BILLTOLASTNAME" columnIndex="7"/>
    <property name="billZip" column="BILLZIP" columnIndex="8"/>
    <property name="shipAddress1" column="SHIPADDR1" columnIndex="9"/>
    <property name="shipAddress2" column="SHIPADDR2" columnIndex="10"/>
    <property name="shipCity" column="SHIPCITY" columnIndex="11"/>
    <property name="shipCountry" column="SHIPCOUNTRY" columnIndex="12"/>
    <property name="shipState" column="SHIPSTATE" columnIndex="13"/>
    <property name="shipToFirstName" column="SHIPTOFIRSTNAME" columnIndex="14"/>
    <property name="shipToLastName" column="SHIPTOLASTNAME" columnIndex="15"/>
    <property name="shipZip" column="SHIPZIP" columnIndex="16"/>
    <property name="cardType" column="CARDTYPE" columnIndex="17"/>
    <property name="courier" column="COURIER" columnIndex="18"/>
    <property name="creditCard" column="CREDITCARD" columnIndex="19"/>
    <property name="expiryDate" column="EXPRDATE" columnIndex="20"/>
    <property name="locale" column="LOCALE" columnIndex="21"/>
    <property name="orderDate" column="ORDERDATE" columnIndex="22"/>
    <property name="orderId" column="ORDERID" columnIndex="23"/>
    <property name="totalPrice" column="TOTALPRICE" columnIndex="24"/>
    <property name="username" column="USERID" columnIndex="25"/>
    <property name="status" column="STATUS" columnIndex="26"/>
  </result-map>

  <mapped-statement name="getOrder" result-map="result">
    select
        BILLADDR1, BILLADDR2, BILLCITY, BILLCOUNTRY, BILLSTATE,
        BILLTOFIRSTNAME, BILLTOLASTNAME, BILLZIP, SHIPADDR1,
        SHIPADDR2, SHIPCITY, SHIPCOUNTRY, SHIPSTATE, SHIPTOFIRSTNAME,
        SHIPTOLASTNAME, SHIPZIP, CARDTYPE, COURIER, CREDITCARD,
        EXPRDATE, LOCALE, ORDERDATE, ORDERS.ORDERID, TOTALPRICE,
        USERID, STATUS
    from ORDERS, ORDERSTATUS where ORDERS.ORDERID = #value# and ORDERS.ORDERID = ORDERSTATUS.ORDERID
  </mapped-statement>

  <mapped-statement name="getOrdersByUsername" result-map="result">
    select
        BILLADDR1, BILLADDR2, BILLCITY, BILLCOUNTRY, BILLSTATE,
        BILLTOFIRSTNAME, BILLTOLASTNAME, BILLZIP, SHIPADDR1,
        SHIPADDR2, SHIPCITY, SHIPCOUNTRY, SHIPSTATE, SHIPTOFIRSTNAME,
        SHIPTOLASTNAME, SHIPZIP, CARDTYPE, COURIER, CREDITCARD,
        EXPRDATE, LOCALE, ORDERDATE, ORDERS.ORDERID, TOTALPRICE,
        USERID, STATUS
    from ORDERS, ORDERSTATUS where ORDERS.USERID = #value# and ORDERS.ORDERID = ORDERSTATUS.ORDERID
  </mapped-statement>

  <mapped-statement name="insertOrder">
    insert into ORDERS (ORDERID, USERID, ORDERDATE, SHIPADDR1, SHIPADDR2, SHIPCITY, SHIPSTATE, SHIPZIP, SHIPCOUNTRY, BILLADDR1, BILLADDR2, BILLCITY, BILLSTATE, BILLZIP, BILLCOUNTRY, COURIER, TOTALPRICE, BILLTOFIRSTNAME, BILLTOLASTNAME, SHIPTOFIRSTNAME, SHIPTOLASTNAME, CREDITCARD, EXPRDATE, CARDTYPE, LOCALE)
    values (#orderId#, #username#, #orderDate#, #shipAddress1#, #shipAddress2:VARCHAR#, #shipCity#, #shipState#, #shipZip#, #shipCountry#, #billAddress1#, #billAddress2:VARCHAR#, #billCity#, #billState#, #billZip#, #billCountry#, #courier#, #totalPrice#, #billToFirstName#, #billToLastName#, #shipToFirstName#, #shipToLastName#, #creditCard#, #expiryDate#, #cardType#, #locale#)
  </mapped-statement>

  <!-- Special MS SQL Server hack to allow the Item ID to be retrieved so that it can be used for Line Item foreign keys!
       This is called with executeQueryForObject despite it's being an update!  -->
  <mapped-statement name="msSqlServerInsertOrder" result-class="java.lang.Integer">
    insert into ORDERS (USERID, ORDERDATE, SHIPADDR1, SHIPADDR2, SHIPCITY, SHIPSTATE, SHIPZIP, SHIPCOUNTRY, BILLADDR1, BILLADDR2, BILLCITY, BILLSTATE, BILLZIP, BILLCOUNTRY, COURIER, TOTALPRICE, BILLTOFIRSTNAME, BILLTOLASTNAME, SHIPTOFIRSTNAME, SHIPTOLASTNAME, CREDITCARD, EXPRDATE, CARDTYPE, LOCALE)
    values (#username#, #orderDate#, #shipAddress1#, #shipAddress2:VARCHAR#, #shipCity#, #shipState#, #shipZip#, #shipCountry#, #billAddress1#, #billAddress2:VARCHAR#, #billCity#, #billState#, #billZip#, #billCountry#, #courier#, #totalPrice#, #billToFirstName#, #billToLastName#, #shipToFirstName#, #shipToLastName#, #creditCard#, #expiryDate#, #cardType#, #locale#);
    select @@IDENTITY as value
  </mapped-statement>

  <!-- As per Microsoft's PetShop demo... -->
  <mapped-statement name="insertOrderStatus">
    insert into ORDERSTATUS (ORDERID, LINENUM, TIMESTAMP, STATUS) values (#orderId#, #orderId#, #orderDate#, #status#)
  </mapped-statement>

</sql-map>
