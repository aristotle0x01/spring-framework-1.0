<project
   xmlns:j="jelly:core"
   xmlns:maven="jelly:maven"
  >
   
   <postGoal name="java:compile">
      <!-- Compile RMI stubs  -->
      <rmic base="${maven.build.dest}" classname="org.springframework.remoting.rmi.RmiInvocationWrapper"/>
      
      <copy todir="${maven.build.dest}">
         <fileset dir="${pom.build.sourceDirectory}">
            <include name="**/*.xml"/>
            <include name="**/*.dtd"/>
         </fileset>
      </copy>      
   </postGoal>   
   
   
   <postGoal name="test:compile">
      <echo>Copying test files from ${pom.build.unitTestSourceDirectory}</echo>
      <copy todir="${maven.test.dest}">
         <fileset dir="${pom.build.unitTestSourceDirectory}">
            <include name="**/*.xml"/>
            <include name="**/*.properties"/>            
         </fileset>
      </copy>      
   </postGoal>
   

   <!--
    | Build the additional jars. The full spring.jar will be built as the default project target
    -->
   <preGoal name="jar:jar">
      
      <!-- 
       | The spring-beans jar.
       -->
      <jar jarfile="${maven.build.dir}/spring-beans-${pom.currentVersion}.jar">
         <fileset dir="${maven.build.dest}">
            <include name="org/springframework/beans/**"/>
            <include name="org/springframework/core/**"/>
            <include name="org/springframework/util/*"/>
         </fileset>
      </jar>

      <!-- 
       | The spring-jdbc jar.
       -->      
      <jar jarfile="${maven.build.dir}/spring-jdbc-${pom.currentVersion}.jar">
         <fileset dir="${maven.build.dest}">
            <include name="org/springframework/aop/**"/>
            <include name="org/springframework/beans/**"/>
            <include name="org/springframework/core/**"/>
            <include name="org/springframework/dao/**"/>
            <include name="org/springframework/jdbc/**"/>
            <include name="org/springframework/jndi/**"/>
            <include name="org/springframework/orm/**"/>
            <include name="org/springframework/transaction/**"/>
            <include name="org/springframework/util/*"/>
         </fileset>
      </jar>      
      
      
   </preGoal>


   <!--
    | Copy the additional jars to the distribution binary directory
    -->
   <preGoal name="dist:prepare-bin-filesystem">
   
      <!-- TODO -->
         
   </preGoal>


   <goal name="preparedocs" description="Extra preparation for the documentation">
   </goal>


   <goal name="docclean" description="Delete temporary and distribution directories for docs">

      <delete quiet="true" dir="${basedir}/${dist.ref.dir}/pdf"/>
      <delete quiet="true" dir="${basedir}/${dist.ref.dir}/html_single"/>
      <delete quiet="true" dir="${basedir}/${dist.ref.dir}/html"/>

   </goal>


   <goal name="docpdf" prereqs="preparedocs" description="Compile reference documentation to pdf">

      <mkdir dir="${basedir}/${dist.ref.dir}/pdf/images"/>

      <copy todir="${basedir}/${dist.ref.dir}/pdf/images">
         <fileset dir="${basedir}/${doc.ref.dir}/src/images">
            <include name="*.gif"/>
            <include name="*.svg"/>
            <include name="*.jpg"/>
         </fileset>
      </copy>

   <!--   ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')} -->
      ${systemScope.setProperty('javax.xml.transform.TransformerFactory','com.icl.saxon.TransformerFactoryImpl')}
<!--  
     <style   basedir="${basedir}/${doc.ref.dir}/src/"
              extension=".fop"
              destdir="${dist.ref.dir}/pdf"
              style="${basedir}/${doc.ref.dir}/styles/fopdf.xsl"
              includes="index.xml"
      />
-->      

      <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${doc.ref.dir}">
         <classpath>
            <fileset dir="${basedir}/${doc.ref.dir}/lib">
               <include name="**/*.jar"/>
            </fileset> 
         </classpath>
         <sysproperty key="java.awt.headless" value="true"/> 
         <!-- classpath refid="maven.dependency.classpath"/ -->
         <arg value="-o"/>
         <arg value="${basedir}/${doc.ref.dir}/pdf/index.fop"/>
         <arg value="${basedir}/${doc.ref.dir}/src/index.xml"/>
         <arg value="${basedir}/${doc.ref.dir}/styles/fopdf.xsl"/>
      </java>

      <java classname="org.apache.fop.apps.Fop" fork="true" dir="${doc.ref.dir}">
         <classpath>
            <fileset dir="${basedir}/${doc.ref.dir}/lib">
               <include name="**/*.jar"/>
            </fileset> 
         </classpath>
         <sysproperty key="java.awt.headless" value="true"/>
         <!-- classpath refid="maven.dependency.classpath"/ -->
         <arg value="${basedir}/${doc.ref.dir}/pdf/index.fop"/>
         <arg value="${basedir}/${doc.ref.dir}/pdf/spring-reference.pdf"/>
      </java>

      <delete file="${dist.ref.dir}/pdf/index.fop"/>

   </goal>


   <goal name="dochtml" prereqs="preparedocs" description="Compile reference documentation to chunked html">

   <!--   ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')} -->
      ${systemScope.setProperty('javax.xml.transform.TransformerFactory','com.icl.saxon.TransformerFactoryImpl')}

      <mkdir dir="${doc.ref.dir}/html/images"/>

      <copy todir="${basedir}/${doc.ref.dir}/html/images">
         <fileset dir="${basedir}/${doc.ref.dir}/src/images">
            <include name="*.gif"/>
            <include name="*.svg"/>
            <include name="*.jpg"/>
         </fileset>
      </copy>
<!--
     <style   basedir="${basedir}/${doc.ref.dir}/src/"
              destdir="${doc.ref.dir}/html"
              style="${basedir}/${doc.ref.dir}/styles/html_chunk.xsl"
              includes="index.xml"
      >
         <classpath refid="maven.dependency.classpath"/>      
      </style>
-->
      <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${dist.ref.dir}/html/">
         <classpath>
            <fileset dir="${basedir}/${doc.ref.dir}/lib">
               <include name="**/*.jar"/>
            </fileset> 
         </classpath>
         <!-- classpath refid="maven.dependency.classpath"/ -->
         <arg value="${basedir}/${doc.ref.dir}/src/index.xml"/>
         <arg value="${basedir}/${doc.ref.dir}/styles/html_chunk.xsl"/>
      </java>      
      
   </goal>


   <goal name="dochtmlsingle" description="Compile reference documentation to single html">

      <mkdir dir="${dist.ref.dir}/html_single/images"/>

      <copy todir="${basedir}/${dist.ref.dir}/html_single/images">
         <fileset dir="${basedir}/${doc.ref.dir}/src/images">
            <include name="*.gif"/>
            <include name="*.svg"/>
            <include name="*.jpg"/>
         </fileset>
      </copy>

      <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${doc.ref.dir}">
         <classpath>
            <fileset dir="${basedir}/${doc.dir}/reference/lib">
               <include name="**/*.jar"/>
            </fileset>
         </classpath>
         <arg value="-o"/>
         <arg value="${basedir}/${dist.ref.dir}/html_single/index.html"/>
         <arg value="${basedir}/${doc.ref.dir}/src/index.xml"/>
         <arg value="${basedir}/${doc.ref.dir}/styles/html.xsl"/>
      </java>
      
   </goal>

   <goal name="refdoc" prereqs="dochtml,dochtmlsingle,docpdf" description="Generate and copy reference documentation">
      <mkdir dir="${maven.build.dir}/docs"/>   
      <mkdir dir="${maven.build.dir}/docs/ref"/>
      
      <copy todir="${maven.build.dir}/docs/ref">
         <fileset dir="${doc.ref.dir}/html"/>
      </copy>
      <copy file="${doc.ref.dir}/pdf/spring-reference.pdf" 
          todir="${maven.build.dir}/docs/ref"/> 
      <copy file="${doc.ref.dir}/html_single/index.html" 
          tofile="${maven.build.dir}/docs/ref/spring-reference.html"/>           
   </goal>


</project>
